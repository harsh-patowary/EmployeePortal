@startuml
' Define skin parameters for better readability
skinparam classAttributeIconSize 0
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundcorner 10
skinparam shadowing false
skinparam class {
    BackgroundColor PaleGreen
    ArrowColor Navy
    BorderColor Navy
}
skinparam note {
    BackgroundColor LightYellow
    BorderColor Gray
}

' --- Classes ---

class User {
  + username: string
  + email: string
  + first_name: string
  + last_name: string
  + is_staff: boolean
  + is_active: boolean
  + date_joined: datetime
  --
  + set_password(raw_password)
  + check_password(raw_password)
  + get_full_name()
  ' ... other standard User methods ...
}
note right of User: Django's built-in User model

class Employee {
  + eID: string {unique}
  + first_name: string
  + last_name: string
  + email: string {unique}
  + phone_number: string {unique}
  + DoB: date (nullable)
  + position: string
  + is_manager: boolean <<derived>>
  + role: string {choices: employee, manager, admin, hr, director}
  + department: string
  + salary: decimal
  + date_hired: date (nullable)
  + paid_leave_balance: decimal
  + sick_leave_balance: decimal
  --
  + get_full_name(): string
  + save()
}
note right of Employee::role
  Role defines permissions.
  is_manager is synced from role.
end note

class Attendance {
  + date: date
  + check_in: datetime (nullable)
  + check_out: datetime (nullable)
  + status: string {choices: present, absent, half_day, leave, remote}
  + notes: text (nullable)
  + created_at: datetime
  + updated_at: datetime
  --
  + duration(): float (nullable) <<property>>
}
note bottom of Attendance
  unique_together = (employee, date)
end note

class LeaveRequest {
  + leave_type: string {choices: paid, sick, unpaid, ...}
  + start_date: date
  + end_date: date
  + reason: text (nullable)
  + status: string {choices: pending, manager_approved, hr_approved, approved, rejected, cancelled}
  + manager_approval_timestamp: datetime (nullable)
  + hr_approval_timestamp: datetime (nullable)
  + rejection_reason: text (nullable)
  + created_at: datetime
  + updated_at: datetime
  --
  + duration_days(): int <<property>>
}

' --- Relationships ---

User "1" -- "1" Employee : user
Employee "1" -- "*" Attendance : employee
Employee "1" -- "*" LeaveRequest : employee

' Self-referencing relationship for manager
Employee "0..1" -- "*" Employee : manager / team_members

' Relationships for approval tracking in LeaveRequest
Employee "0..1" -- "*" LeaveRequest : approved_by_manager
Employee "0..1" -- "*" LeaveRequest : approved_by_hr


@enduml